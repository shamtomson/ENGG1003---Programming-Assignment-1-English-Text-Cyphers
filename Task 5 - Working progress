#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  /* GETTING STRING AND INITIALISING ARRAY TO FIND MOST USED CHARACTER */

  char ArrayForMostUsed[1024] = { 0 };
  printf ("%d\n", ArrayForMostUsed[2]);
  FILE *astring;
  char string[1024];
  astring = fopen ("HardCypherText.txt", "r");
  fscanf (astring, "%[^\n]s", string);


  /* FINDING LENGTH */

  int i = 0;			//PROBLEM: finding spaces as most used also
  int length;
  length = strlen (string);
  printf ("length is %d\n", length);

  /* CONVERTING TO UPPERCASE */

  while (i < length) {
      if ((string[i] > 96) && (string[i] < 122)) {
          string[i] = string[i] - 32; 
          }
      i++;
    }
  printf ("the string is: %s\n", string);

  /* FINDING MOST USED CHARACTER */

  i = 0;
  printf ("i is equal to %d\n", i);
  int max, index = 0;

  for (i = 0; string[i] != 0; i++) {
      ++ArrayForMostUsed[string[i]];
      }
  
  max = ArrayForMostUsed[0];

  for (i = 0; string[i] != 0; i++) {
      if ((ArrayForMostUsed[string[i]] > max) && (string[i] != 32)) {
          max = ArrayForMostUsed[string[i]];
          index = i;
          }
    }





  printf ("The most used character is: %c\n", string[index]);
  //we assume the letter most used is either e, or t
  printf ("The value of most common character is %d\n", string[index]);
  printf
    ("The value of E is 69, therefore the difference between the value of E and most common letter %c will give rotation amount\n",
     string[index]);


  /* FINDING DECRYPTED MESSAGE

     int rot;
     rot = string[index] - 69;
     printf("The rotation amount is likely %d\n", rot);
     char letter = 1; //this variable is not entirely necessary but is used for convinience when converting from ASCII number to letter
     printf("The inputtext: %s. With rotation %d is\n", string, rot); //this is used to ensure that the correct input ile has been used for standard input
     i = 0;
     while(i < length){
     if((string[i] >= 65) && (string[i] <= 64 + rot)){ //uppercase is from 65-90 in ASCII table
     letter = string[i] + (26 - rot);
     printf("%c", letter);
     i++;
     }
     else if((string[i] <= 90) && (string[i] >= 64 + rot)){
     letter = string[i] - rot; 
     printf("%c", letter);
     i++;
     }
     else if(string[i] == 32){
     printf(" ");
     i++;
     }
     else{
     letter = string[i];
     printf("%c", letter);
     i++;
     }
     }  
   */
  return 0;
}
